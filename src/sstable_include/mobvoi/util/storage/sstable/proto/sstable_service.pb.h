// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mobvoi/util/storage/sstable/proto/sstable_service.proto

#ifndef PROTOBUF_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto__INCLUDED
#define PROTOBUF_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace file {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

class DeleteRequest;
class GetRequest;
class GetResponse;
class IteratorRequest;
class NewIteratorOptions;
class NewIteratorRequest;
class NewIteratorResponse;
class NextBatchResponse;
class NextResponse;
class PutRequest;
class SSTableResponse;
class SStableRecord;
class SeekKeyRequest;

// ===================================================================

class SSTableResponse : public ::google::protobuf::Message {
 public:
  SSTableResponse();
  virtual ~SSTableResponse();

  SSTableResponse(const SSTableResponse& from);

  inline SSTableResponse& operator=(const SSTableResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSTableResponse& default_instance();

  void Swap(SSTableResponse* other);

  // implements Message ----------------------------------------------

  inline SSTableResponse* New() const { return New(NULL); }

  SSTableResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSTableResponse& from);
  void MergeFrom(const SSTableResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SSTableResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:file.SSTableResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SSTableResponse* default_instance_;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  void Swap(PutRequest* other);

  // implements Message ----------------------------------------------

  inline PutRequest* New() const { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:file.PutRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static PutRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();

  DeleteRequest(const DeleteRequest& from);

  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();

  void Swap(DeleteRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteRequest* New() const { return New(NULL); }

  DeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:file.DeleteRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static DeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRequest : public ::google::protobuf::Message {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  void Swap(GetRequest* other);

  // implements Message ----------------------------------------------

  inline GetRequest* New() const { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:file.GetRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  void Swap(GetResponse* other);

  // implements Message ----------------------------------------------

  inline GetResponse* New() const { return New(NULL); }

  GetResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:file.GetResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetResponse* default_instance_;
};
// -------------------------------------------------------------------

class NewIteratorRequest : public ::google::protobuf::Message {
 public:
  NewIteratorRequest();
  virtual ~NewIteratorRequest();

  NewIteratorRequest(const NewIteratorRequest& from);

  inline NewIteratorRequest& operator=(const NewIteratorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewIteratorRequest& default_instance();

  void Swap(NewIteratorRequest* other);

  // implements Message ----------------------------------------------

  inline NewIteratorRequest* New() const { return New(NULL); }

  NewIteratorRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewIteratorRequest& from);
  void MergeFrom(const NewIteratorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewIteratorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .file.NewIteratorOptions options = 1;
  bool has_options() const;
  void clear_options();
  static const int kOptionsFieldNumber = 1;
  const ::file::NewIteratorOptions& options() const;
  ::file::NewIteratorOptions* mutable_options();
  ::file::NewIteratorOptions* release_options();
  void set_allocated_options(::file::NewIteratorOptions* options);

  // @@protoc_insertion_point(class_scope:file.NewIteratorRequest)
 private:
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::file::NewIteratorOptions* options_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NewIteratorRequest* default_instance_;
};
// -------------------------------------------------------------------

class SeekKeyRequest : public ::google::protobuf::Message {
 public:
  SeekKeyRequest();
  virtual ~SeekKeyRequest();

  SeekKeyRequest(const SeekKeyRequest& from);

  inline SeekKeyRequest& operator=(const SeekKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeekKeyRequest& default_instance();

  void Swap(SeekKeyRequest* other);

  // implements Message ----------------------------------------------

  inline SeekKeyRequest* New() const { return New(NULL); }

  SeekKeyRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeekKeyRequest& from);
  void MergeFrom(const SeekKeyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SeekKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:file.SeekKeyRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_uid();
  inline void clear_has_uid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SeekKeyRequest* default_instance_;
};
// -------------------------------------------------------------------

class NextResponse : public ::google::protobuf::Message {
 public:
  NextResponse();
  virtual ~NextResponse();

  NextResponse(const NextResponse& from);

  inline NextResponse& operator=(const NextResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NextResponse& default_instance();

  void Swap(NextResponse* other);

  // implements Message ----------------------------------------------

  inline NextResponse* New() const { return New(NULL); }

  NextResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NextResponse& from);
  void MergeFrom(const NextResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NextResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string message = 4;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:file.NextResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NextResponse* default_instance_;
};
// -------------------------------------------------------------------

class IteratorRequest : public ::google::protobuf::Message {
 public:
  IteratorRequest();
  virtual ~IteratorRequest();

  IteratorRequest(const IteratorRequest& from);

  inline IteratorRequest& operator=(const IteratorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorRequest& default_instance();

  void Swap(IteratorRequest* other);

  // implements Message ----------------------------------------------

  inline IteratorRequest* New() const { return New(NULL); }

  IteratorRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IteratorRequest& from);
  void MergeFrom(const IteratorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IteratorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional int32 batch_size = 2;
  bool has_batch_size() const;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 2;
  ::google::protobuf::int32 batch_size() const;
  void set_batch_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:file.IteratorRequest)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_batch_size();
  inline void clear_has_batch_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::int32 batch_size_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static IteratorRequest* default_instance_;
};
// -------------------------------------------------------------------

class NewIteratorResponse : public ::google::protobuf::Message {
 public:
  NewIteratorResponse();
  virtual ~NewIteratorResponse();

  NewIteratorResponse(const NewIteratorResponse& from);

  inline NewIteratorResponse& operator=(const NewIteratorResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewIteratorResponse& default_instance();

  void Swap(NewIteratorResponse* other);

  // implements Message ----------------------------------------------

  inline NewIteratorResponse* New() const { return New(NULL); }

  NewIteratorResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewIteratorResponse& from);
  void MergeFrom(const NewIteratorResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewIteratorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional string uid = 3;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:file.NewIteratorResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  bool success_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NewIteratorResponse* default_instance_;
};
// -------------------------------------------------------------------

class SStableRecord : public ::google::protobuf::Message {
 public:
  SStableRecord();
  virtual ~SStableRecord();

  SStableRecord(const SStableRecord& from);

  inline SStableRecord& operator=(const SStableRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SStableRecord& default_instance();

  void Swap(SStableRecord* other);

  // implements Message ----------------------------------------------

  inline SStableRecord* New() const { return New(NULL); }

  SStableRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SStableRecord& from);
  void MergeFrom(const SStableRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SStableRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:file.SStableRecord)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static SStableRecord* default_instance_;
};
// -------------------------------------------------------------------

class NextBatchResponse : public ::google::protobuf::Message {
 public:
  NextBatchResponse();
  virtual ~NextBatchResponse();

  NextBatchResponse(const NextBatchResponse& from);

  inline NextBatchResponse& operator=(const NextBatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NextBatchResponse& default_instance();

  void Swap(NextBatchResponse* other);

  // implements Message ----------------------------------------------

  inline NextBatchResponse* New() const { return New(NULL); }

  NextBatchResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NextBatchResponse& from);
  void MergeFrom(const NextBatchResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NextBatchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // repeated .file.SStableRecord records = 3;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 3;
  const ::file::SStableRecord& records(int index) const;
  ::file::SStableRecord* mutable_records(int index);
  ::file::SStableRecord* add_records();
  ::google::protobuf::RepeatedPtrField< ::file::SStableRecord >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::file::SStableRecord >&
      records() const;

  // @@protoc_insertion_point(class_scope:file.NextBatchResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::RepeatedPtrField< ::file::SStableRecord > records_;
  bool success_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NextBatchResponse* default_instance_;
};
// -------------------------------------------------------------------

class NewIteratorOptions : public ::google::protobuf::Message {
 public:
  NewIteratorOptions();
  virtual ~NewIteratorOptions();

  NewIteratorOptions(const NewIteratorOptions& from);

  inline NewIteratorOptions& operator=(const NewIteratorOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewIteratorOptions& default_instance();

  void Swap(NewIteratorOptions* other);

  // implements Message ----------------------------------------------

  inline NewIteratorOptions* New() const { return New(NULL); }

  NewIteratorOptions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewIteratorOptions& from);
  void MergeFrom(const NewIteratorOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NewIteratorOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reserved_all_fields = 1 [default = true];
  bool has_reserved_all_fields() const;
  void clear_reserved_all_fields();
  static const int kReservedAllFieldsFieldNumber = 1;
  bool reserved_all_fields() const;
  void set_reserved_all_fields(bool value);

  // repeated string reserved_field = 2;
  int reserved_field_size() const;
  void clear_reserved_field();
  static const int kReservedFieldFieldNumber = 2;
  const ::std::string& reserved_field(int index) const;
  ::std::string* mutable_reserved_field(int index);
  void set_reserved_field(int index, const ::std::string& value);
  void set_reserved_field(int index, const char* value);
  void set_reserved_field(int index, const char* value, size_t size);
  ::std::string* add_reserved_field();
  void add_reserved_field(const ::std::string& value);
  void add_reserved_field(const char* value);
  void add_reserved_field(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& reserved_field() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reserved_field();

  // optional bool return_key_only = 3;
  bool has_return_key_only() const;
  void clear_return_key_only();
  static const int kReturnKeyOnlyFieldNumber = 3;
  bool return_key_only() const;
  void set_return_key_only(bool value);

  // @@protoc_insertion_point(class_scope:file.NewIteratorOptions)
 private:
  inline void set_has_reserved_all_fields();
  inline void clear_has_reserved_all_fields();
  inline void set_has_return_key_only();
  inline void clear_has_return_key_only();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reserved_field_;
  bool reserved_all_fields_;
  bool return_key_only_;
  friend void  protobuf_AddDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_AssignDesc_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto();

  void InitAsDefaultInstance();
  static NewIteratorOptions* default_instance_;
};
// ===================================================================

class SSTableServer_Stub;

class SSTableServer : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline SSTableServer() {};
 public:
  virtual ~SSTableServer();

  typedef SSTableServer_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Put(::google::protobuf::RpcController* controller,
                       const ::file::PutRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Delete(::google::protobuf::RpcController* controller,
                       const ::file::DeleteRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Get(::google::protobuf::RpcController* controller,
                       const ::file::GetRequest* request,
                       ::file::GetResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NewIterator(::google::protobuf::RpcController* controller,
                       const ::file::NewIteratorRequest* request,
                       ::file::NewIteratorResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteIterator(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SeekToFirst(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SeekKey(::google::protobuf::RpcController* controller,
                       const ::file::SeekKeyRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Next(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::NextResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NextBatch(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::NextBatchResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SSTableServer);
};

class SSTableServer_Stub : public SSTableServer {
 public:
  SSTableServer_Stub(::google::protobuf::RpcChannel* channel);
  SSTableServer_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~SSTableServer_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements SSTableServer ------------------------------------------

  void Put(::google::protobuf::RpcController* controller,
                       const ::file::PutRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  void Delete(::google::protobuf::RpcController* controller,
                       const ::file::DeleteRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  void Get(::google::protobuf::RpcController* controller,
                       const ::file::GetRequest* request,
                       ::file::GetResponse* response,
                       ::google::protobuf::Closure* done);
  void NewIterator(::google::protobuf::RpcController* controller,
                       const ::file::NewIteratorRequest* request,
                       ::file::NewIteratorResponse* response,
                       ::google::protobuf::Closure* done);
  void DeleteIterator(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  void SeekToFirst(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  void SeekKey(::google::protobuf::RpcController* controller,
                       const ::file::SeekKeyRequest* request,
                       ::file::SSTableResponse* response,
                       ::google::protobuf::Closure* done);
  void Next(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::NextResponse* response,
                       ::google::protobuf::Closure* done);
  void NextBatch(::google::protobuf::RpcController* controller,
                       const ::file::IteratorRequest* request,
                       ::file::NextBatchResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SSTableServer_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SSTableResponse

// required bool success = 1;
inline bool SSTableResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSTableResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSTableResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSTableResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool SSTableResponse::success() const {
  // @@protoc_insertion_point(field_get:file.SSTableResponse.success)
  return success_;
}
inline void SSTableResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:file.SSTableResponse.success)
}

// optional string message = 2;
inline bool SSTableResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SSTableResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SSTableResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SSTableResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& SSTableResponse::message() const {
  // @@protoc_insertion_point(field_get:file.SSTableResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTableResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.SSTableResponse.message)
}
inline void SSTableResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.SSTableResponse.message)
}
inline void SSTableResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.SSTableResponse.message)
}
inline ::std::string* SSTableResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:file.SSTableResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSTableResponse::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTableResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:file.SSTableResponse.message)
}

// -------------------------------------------------------------------

// PutRequest

// required string key = 1;
inline bool PutRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& PutRequest::key() const {
  // @@protoc_insertion_point(field_get:file.PutRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.PutRequest.key)
}
inline void PutRequest::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.PutRequest.key)
}
inline void PutRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.PutRequest.key)
}
inline ::std::string* PutRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.PutRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.PutRequest.key)
}

// required string value = 2;
inline bool PutRequest::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutRequest::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutRequest::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:file.PutRequest.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.PutRequest.value)
}
inline void PutRequest::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.PutRequest.value)
}
inline void PutRequest::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.PutRequest.value)
}
inline ::std::string* PutRequest::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:file.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:file.PutRequest.value)
}

// -------------------------------------------------------------------

// DeleteRequest

// required string key = 1;
inline bool DeleteRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& DeleteRequest::key() const {
  // @@protoc_insertion_point(field_get:file.DeleteRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.DeleteRequest.key)
}
inline void DeleteRequest::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.DeleteRequest.key)
}
inline void DeleteRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.DeleteRequest.key)
}
inline ::std::string* DeleteRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.DeleteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.DeleteRequest.key)
}

// -------------------------------------------------------------------

// GetRequest

// required string key = 1;
inline bool GetRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& GetRequest::key() const {
  // @@protoc_insertion_point(field_get:file.GetRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.GetRequest.key)
}
inline void GetRequest::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.GetRequest.key)
}
inline void GetRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.GetRequest.key)
}
inline ::std::string* GetRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.GetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.GetRequest.key)
}

// -------------------------------------------------------------------

// GetResponse

// required bool success = 1;
inline bool GetResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool GetResponse::success() const {
  // @@protoc_insertion_point(field_get:file.GetResponse.success)
  return success_;
}
inline void GetResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:file.GetResponse.success)
}

// optional string value = 2;
inline bool GetResponse::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetResponse::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& GetResponse::value() const {
  // @@protoc_insertion_point(field_get:file.GetResponse.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.GetResponse.value)
}
inline void GetResponse::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.GetResponse.value)
}
inline void GetResponse::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.GetResponse.value)
}
inline ::std::string* GetResponse::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:file.GetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:file.GetResponse.value)
}

// optional string message = 3;
inline bool GetResponse::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetResponse::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& GetResponse::message() const {
  // @@protoc_insertion_point(field_get:file.GetResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.GetResponse.message)
}
inline void GetResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.GetResponse.message)
}
inline void GetResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.GetResponse.message)
}
inline ::std::string* GetResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:file.GetResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:file.GetResponse.message)
}

// -------------------------------------------------------------------

// NewIteratorRequest

// required .file.NewIteratorOptions options = 1;
inline bool NewIteratorRequest::has_options() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewIteratorRequest::set_has_options() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewIteratorRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewIteratorRequest::clear_options() {
  if (options_ != NULL) options_->::file::NewIteratorOptions::Clear();
  clear_has_options();
}
inline const ::file::NewIteratorOptions& NewIteratorRequest::options() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::file::NewIteratorOptions* NewIteratorRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) {
    options_ = new ::file::NewIteratorOptions;
  }
  // @@protoc_insertion_point(field_mutable:file.NewIteratorRequest.options)
  return options_;
}
inline ::file::NewIteratorOptions* NewIteratorRequest::release_options() {
  clear_has_options();
  ::file::NewIteratorOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void NewIteratorRequest::set_allocated_options(::file::NewIteratorOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:file.NewIteratorRequest.options)
}

// -------------------------------------------------------------------

// SeekKeyRequest

// required string key = 1;
inline bool SeekKeyRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeekKeyRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeekKeyRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeekKeyRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& SeekKeyRequest::key() const {
  // @@protoc_insertion_point(field_get:file.SeekKeyRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeekKeyRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.SeekKeyRequest.key)
}
inline void SeekKeyRequest::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.SeekKeyRequest.key)
}
inline void SeekKeyRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.SeekKeyRequest.key)
}
inline ::std::string* SeekKeyRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.SeekKeyRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SeekKeyRequest::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeekKeyRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.SeekKeyRequest.key)
}

// required string uid = 2;
inline bool SeekKeyRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeekKeyRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeekKeyRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeekKeyRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& SeekKeyRequest::uid() const {
  // @@protoc_insertion_point(field_get:file.SeekKeyRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeekKeyRequest::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.SeekKeyRequest.uid)
}
inline void SeekKeyRequest::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.SeekKeyRequest.uid)
}
inline void SeekKeyRequest::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.SeekKeyRequest.uid)
}
inline ::std::string* SeekKeyRequest::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:file.SeekKeyRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SeekKeyRequest::release_uid() {
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeekKeyRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:file.SeekKeyRequest.uid)
}

// -------------------------------------------------------------------

// NextResponse

// required bool success = 1;
inline bool NextResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool NextResponse::success() const {
  // @@protoc_insertion_point(field_get:file.NextResponse.success)
  return success_;
}
inline void NextResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:file.NextResponse.success)
}

// optional string key = 2;
inline bool NextResponse::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NextResponse::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NextResponse::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NextResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& NextResponse::key() const {
  // @@protoc_insertion_point(field_get:file.NextResponse.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NextResponse.key)
}
inline void NextResponse::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NextResponse.key)
}
inline void NextResponse::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NextResponse.key)
}
inline ::std::string* NextResponse::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.NextResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NextResponse::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.NextResponse.key)
}

// optional string value = 3;
inline bool NextResponse::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NextResponse::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NextResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NextResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& NextResponse::value() const {
  // @@protoc_insertion_point(field_get:file.NextResponse.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NextResponse.value)
}
inline void NextResponse::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NextResponse.value)
}
inline void NextResponse::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NextResponse.value)
}
inline ::std::string* NextResponse::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:file.NextResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NextResponse::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:file.NextResponse.value)
}

// optional string message = 4;
inline bool NextResponse::has_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NextResponse::set_has_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NextResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NextResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& NextResponse::message() const {
  // @@protoc_insertion_point(field_get:file.NextResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NextResponse.message)
}
inline void NextResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NextResponse.message)
}
inline void NextResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NextResponse.message)
}
inline ::std::string* NextResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:file.NextResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NextResponse::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:file.NextResponse.message)
}

// -------------------------------------------------------------------

// IteratorRequest

// required string uid = 1;
inline bool IteratorRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IteratorRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IteratorRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IteratorRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& IteratorRequest::uid() const {
  // @@protoc_insertion_point(field_get:file.IteratorRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IteratorRequest::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.IteratorRequest.uid)
}
inline void IteratorRequest::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.IteratorRequest.uid)
}
inline void IteratorRequest::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.IteratorRequest.uid)
}
inline ::std::string* IteratorRequest::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:file.IteratorRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IteratorRequest::release_uid() {
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IteratorRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:file.IteratorRequest.uid)
}

// optional int32 batch_size = 2;
inline bool IteratorRequest::has_batch_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IteratorRequest::set_has_batch_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IteratorRequest::clear_has_batch_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IteratorRequest::clear_batch_size() {
  batch_size_ = 0;
  clear_has_batch_size();
}
inline ::google::protobuf::int32 IteratorRequest::batch_size() const {
  // @@protoc_insertion_point(field_get:file.IteratorRequest.batch_size)
  return batch_size_;
}
inline void IteratorRequest::set_batch_size(::google::protobuf::int32 value) {
  set_has_batch_size();
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:file.IteratorRequest.batch_size)
}

// -------------------------------------------------------------------

// NewIteratorResponse

// required bool success = 1;
inline bool NewIteratorResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewIteratorResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewIteratorResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewIteratorResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool NewIteratorResponse::success() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorResponse.success)
  return success_;
}
inline void NewIteratorResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:file.NewIteratorResponse.success)
}

// optional string message = 2;
inline bool NewIteratorResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewIteratorResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewIteratorResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewIteratorResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& NewIteratorResponse::message() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewIteratorResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NewIteratorResponse.message)
}
inline void NewIteratorResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NewIteratorResponse.message)
}
inline void NewIteratorResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NewIteratorResponse.message)
}
inline ::std::string* NewIteratorResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:file.NewIteratorResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewIteratorResponse::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewIteratorResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:file.NewIteratorResponse.message)
}

// optional string uid = 3;
inline bool NewIteratorResponse::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewIteratorResponse::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewIteratorResponse::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewIteratorResponse::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uid();
}
inline const ::std::string& NewIteratorResponse::uid() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorResponse.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewIteratorResponse::set_uid(const ::std::string& value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NewIteratorResponse.uid)
}
inline void NewIteratorResponse::set_uid(const char* value) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NewIteratorResponse.uid)
}
inline void NewIteratorResponse::set_uid(const char* value, size_t size) {
  set_has_uid();
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NewIteratorResponse.uid)
}
inline ::std::string* NewIteratorResponse::mutable_uid() {
  set_has_uid();
  // @@protoc_insertion_point(field_mutable:file.NewIteratorResponse.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewIteratorResponse::release_uid() {
  clear_has_uid();
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewIteratorResponse::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:file.NewIteratorResponse.uid)
}

// -------------------------------------------------------------------

// SStableRecord

// required string key = 1;
inline bool SStableRecord::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SStableRecord::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SStableRecord::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SStableRecord::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& SStableRecord::key() const {
  // @@protoc_insertion_point(field_get:file.SStableRecord.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SStableRecord::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.SStableRecord.key)
}
inline void SStableRecord::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.SStableRecord.key)
}
inline void SStableRecord::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.SStableRecord.key)
}
inline ::std::string* SStableRecord::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:file.SStableRecord.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SStableRecord::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SStableRecord::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:file.SStableRecord.key)
}

// optional string value = 4;
inline bool SStableRecord::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SStableRecord::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SStableRecord::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SStableRecord::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SStableRecord::value() const {
  // @@protoc_insertion_point(field_get:file.SStableRecord.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SStableRecord::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.SStableRecord.value)
}
inline void SStableRecord::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.SStableRecord.value)
}
inline void SStableRecord::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.SStableRecord.value)
}
inline ::std::string* SStableRecord::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:file.SStableRecord.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SStableRecord::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SStableRecord::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:file.SStableRecord.value)
}

// -------------------------------------------------------------------

// NextBatchResponse

// required bool success = 1;
inline bool NextBatchResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NextBatchResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NextBatchResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NextBatchResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool NextBatchResponse::success() const {
  // @@protoc_insertion_point(field_get:file.NextBatchResponse.success)
  return success_;
}
inline void NextBatchResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:file.NextBatchResponse.success)
}

// optional string message = 2;
inline bool NextBatchResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NextBatchResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NextBatchResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NextBatchResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& NextBatchResponse::message() const {
  // @@protoc_insertion_point(field_get:file.NextBatchResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextBatchResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:file.NextBatchResponse.message)
}
inline void NextBatchResponse::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:file.NextBatchResponse.message)
}
inline void NextBatchResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:file.NextBatchResponse.message)
}
inline ::std::string* NextBatchResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:file.NextBatchResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NextBatchResponse::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NextBatchResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:file.NextBatchResponse.message)
}

// repeated .file.SStableRecord records = 3;
inline int NextBatchResponse::records_size() const {
  return records_.size();
}
inline void NextBatchResponse::clear_records() {
  records_.Clear();
}
inline const ::file::SStableRecord& NextBatchResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:file.NextBatchResponse.records)
  return records_.Get(index);
}
inline ::file::SStableRecord* NextBatchResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:file.NextBatchResponse.records)
  return records_.Mutable(index);
}
inline ::file::SStableRecord* NextBatchResponse::add_records() {
  // @@protoc_insertion_point(field_add:file.NextBatchResponse.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::file::SStableRecord >*
NextBatchResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:file.NextBatchResponse.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::file::SStableRecord >&
NextBatchResponse::records() const {
  // @@protoc_insertion_point(field_list:file.NextBatchResponse.records)
  return records_;
}

// -------------------------------------------------------------------

// NewIteratorOptions

// optional bool reserved_all_fields = 1 [default = true];
inline bool NewIteratorOptions::has_reserved_all_fields() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewIteratorOptions::set_has_reserved_all_fields() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewIteratorOptions::clear_has_reserved_all_fields() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewIteratorOptions::clear_reserved_all_fields() {
  reserved_all_fields_ = true;
  clear_has_reserved_all_fields();
}
inline bool NewIteratorOptions::reserved_all_fields() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorOptions.reserved_all_fields)
  return reserved_all_fields_;
}
inline void NewIteratorOptions::set_reserved_all_fields(bool value) {
  set_has_reserved_all_fields();
  reserved_all_fields_ = value;
  // @@protoc_insertion_point(field_set:file.NewIteratorOptions.reserved_all_fields)
}

// repeated string reserved_field = 2;
inline int NewIteratorOptions::reserved_field_size() const {
  return reserved_field_.size();
}
inline void NewIteratorOptions::clear_reserved_field() {
  reserved_field_.Clear();
}
inline const ::std::string& NewIteratorOptions::reserved_field(int index) const {
  // @@protoc_insertion_point(field_get:file.NewIteratorOptions.reserved_field)
  return reserved_field_.Get(index);
}
inline ::std::string* NewIteratorOptions::mutable_reserved_field(int index) {
  // @@protoc_insertion_point(field_mutable:file.NewIteratorOptions.reserved_field)
  return reserved_field_.Mutable(index);
}
inline void NewIteratorOptions::set_reserved_field(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:file.NewIteratorOptions.reserved_field)
  reserved_field_.Mutable(index)->assign(value);
}
inline void NewIteratorOptions::set_reserved_field(int index, const char* value) {
  reserved_field_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:file.NewIteratorOptions.reserved_field)
}
inline void NewIteratorOptions::set_reserved_field(int index, const char* value, size_t size) {
  reserved_field_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:file.NewIteratorOptions.reserved_field)
}
inline ::std::string* NewIteratorOptions::add_reserved_field() {
  return reserved_field_.Add();
}
inline void NewIteratorOptions::add_reserved_field(const ::std::string& value) {
  reserved_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:file.NewIteratorOptions.reserved_field)
}
inline void NewIteratorOptions::add_reserved_field(const char* value) {
  reserved_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:file.NewIteratorOptions.reserved_field)
}
inline void NewIteratorOptions::add_reserved_field(const char* value, size_t size) {
  reserved_field_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:file.NewIteratorOptions.reserved_field)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NewIteratorOptions::reserved_field() const {
  // @@protoc_insertion_point(field_list:file.NewIteratorOptions.reserved_field)
  return reserved_field_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NewIteratorOptions::mutable_reserved_field() {
  // @@protoc_insertion_point(field_mutable_list:file.NewIteratorOptions.reserved_field)
  return &reserved_field_;
}

// optional bool return_key_only = 3;
inline bool NewIteratorOptions::has_return_key_only() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewIteratorOptions::set_has_return_key_only() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewIteratorOptions::clear_has_return_key_only() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewIteratorOptions::clear_return_key_only() {
  return_key_only_ = false;
  clear_has_return_key_only();
}
inline bool NewIteratorOptions::return_key_only() const {
  // @@protoc_insertion_point(field_get:file.NewIteratorOptions.return_key_only)
  return return_key_only_;
}
inline void NewIteratorOptions::set_return_key_only(bool value) {
  set_has_return_key_only();
  return_key_only_ = value;
  // @@protoc_insertion_point(field_set:file.NewIteratorOptions.return_key_only)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace file

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mobvoi_2futil_2fstorage_2fsstable_2fproto_2fsstable_5fservice_2eproto__INCLUDED
